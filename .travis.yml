language: cpp
sudo: true

matrix:
  include:

    # Linux C++11 GCC build
    - os: linux
      compiler: gcc
      addons: &gcc6
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6']
      env: COMPILER='g++-6' BUILD_TYPE='Release'

    # Linux C++11 Clang build
    - os: linux
      compiler: clang
      addons: &clang38
        apt:
          sources: ['llvm-toolchain-precise-3.8', 'ubuntu-toolchain-r-test']
          packages: ['clang-3.8']
      env: COMPILER='clang++-3.8' BUILD_TYPE='Release'

    # OSX C++11 Clang Builds
    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: COMPILER='clang++' BUILD_TYPE='Release'

install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      # Install CMake 3.3
      CMAKE_URL="http://www.cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz"
      mkdir -p cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      which cmake || brew install cmake
    fi
  - |
    if [[ "${COMPILER}" == "g++-6" ]]; then
      # Install LCOV
      LCOV_URL ="http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz"
      travis_retry wget --no-check-certificate --quiet -O - ${LCOV_URL} | tar xf lcov_1.11.orig.tar.gz
      sudo make -C lcov-1.11/ install
      gem install coveralls-lcov
    fi
  # Install Flatbuffers
  - git clone https://github.com/google/flatbuffers.git
  - git checkout tags/v1.8.0 # Checkout the latest release
  - cd flatbuffers && mkdir -p flatbuffer_build && cd flatbuffer_build
  - cmake -DCMAKE_BUILD_TYPE=Release ..
  - sudo make -j8 install # This might require sudo.
  - cd ..
  - git clone https://github.com/zeromq/libzmq.git # Pull libzmq (currently from master) and build it
  - cd libzmq && mkdir -p libzmq_build && cd libzmq_build
  - cmake -DCMAKE_BUILD_TYPE=Release -DZMQ_BUILD_TESTS=OFF ..
  - sudo make -j8 install # This might require sudo.

before_script:
  - export CXX=${COMPILER}
  - cd ${TRAVIS_BUILD_DIR}
  - lcov --directory . --zerocounters
  - cmake -H. -BBuild -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DBUILD_TESTS=ON -DBUILD_EXAMPLES=ON -Wdev
  - cd Build

script:
  - make -j4
  - ctest -R simple_tests -C Release --output-on-failure
  
after_success:
- |
  if [[ "${COMPILER}" == "g++-6" ]]; then
    cd ${TRAVIS_BUILD_DIR}
    lcov --directory . --capture --output-file coverage.info
    lcov --remove coverage.info 'tests/*' 'msgs/include/simple_msgs/generated/*' --output-file coverage.info
    lcov --list coverage.info
    coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info
  fi