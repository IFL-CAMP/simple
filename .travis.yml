language: cpp
sudo: true
dist: xenial

matrix:
  include:

  - os: linux
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gcc-5
        - g++-5
    env: MATRIX_EVAL="CC='gcc-5' && CXX='g++-5'" BUILD_TYPE='Debug'
    if: tag IS blank

  - os: linux
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gcc-5
        - g++-5
    env: MATRIX_EVAL="CC='gcc-5' && CXX='g++-5'" BUILD_TYPE='Release'
    if: tag IS blank

  - os: linux
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gcc-5
        - g++-5
    env: MATRIX_EVAL="CC='gcc-5' && CXX='g++-5'" BUILD_TYPE='Coverage'
    if: tag IS blank

  - os: linux
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gcc-5
        - g++-5
    env: MATRIX_EVAL="CC='gcc-5' && CXX='g++-5'" BUILD_TYPE='Release' SIMPLE_PACKAGE='True'
    if: tag IS present

  - os: linux
    compiler: clang
    addons:
      apt:
        sources:
        - llvm-toolchain-precise-3.8
        - ubuntu-toolchain-r-test
        packages:
        - clang-3.8
    env: MATRIX_EVAL="CXX='clang++-3.8'" BUILD_TYPE='Debug'
    if: tag IS blank

  - os: linux
    compiler: clang
    addons:
      apt:
        sources:
        - llvm-toolchain-precise-3.8
        - ubuntu-toolchain-r-test
        packages:
        - clang-3.8
    env: MATRIX_EVAL="CXX='clang++-3.8'" BUILD_TYPE='Release'
    if: tag IS blank

  - os: osx
    osx_image: xcode8.3
    compiler: clang
    env: MATRIX_EVAL="CXX='clang++'" BUILD_TYPE='Debug'
    if: tag IS blank

  - os: osx
    osx_image: xcode8.3
    compiler: clang
    env: MATRIX_EVAL="CXX='clang++'" BUILD_TYPE='Release'
    if: tag IS blank

  - os: osx
    osx_image: xcode8.3
    compiler: clang
    env: MATRIX_EVAL="CXX='clang++'" BUILD_TYPE='Release' SIMPLE_PACKAGE='True'
    if: tag IS present

before_install:
- |
  if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    sudo apt-get update --option Acquire::Retries=100 --option Acquire::http::Timeout="60" # Hopefully preventing Travis to fail when installing from apt
  fi
- eval "${MATRIX_EVAL}"

install:
- DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
- mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
- |
  if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    # Install CMake 3.3
    CMAKE_URL="http://www.cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz"
    mkdir -p cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
    export PATH=${DEPS_DIR}/cmake/bin:${PATH}
  elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
    which cmake || brew install cmake
  fi
- |
  if [[ "${BUILD_TYPE}" == "Coverage" ]]; then
    # Install LCOV
    sudo apt install lcov
  fi
- cd ${DEPS_DIR}
- git clone https://github.com/google/flatbuffers.git
- cd flatbuffers && mkdir -p flatbuffer_build && cd flatbuffer_build
- cmake -DCMAKE_BUILD_TYPE=Release ..
- sudo make -j8 install
- cd ${DEPS_DIR}
- git clone https://github.com/zeromq/libzmq.git
- cd libzmq && mkdir -p libzmq_build && cd libzmq_build
- cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_CURVE=OFF -DZMQ_BUILD_TESTS=OFF ..
- sudo make -j8 install
- cd ${DEPS_DIR}
- git clone https://github.com/zeromq/cppzmq.git
- cd cppzmq && mkdir -p cppzmq_build && cd cppzmq_build
- cmake -DCMAKE_BUILD_TYPE=Release -DCPPZMQ_BUILD_TESTS=OFF ..
- sudo make -j8 install

before_script:
- cd ${TRAVIS_BUILD_DIR}
- |
  if [[ "${BUILD_TYPE}" == "Coverage" ]]; then
    lcov --directory . --zerocounters
  fi
- mkdir -p build && cd build
- |
  if [[ "${SIMPLE_PACKAGE}" == "True" ]]; then
    cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DSIMPLE_BUILD_STATIC=OFF -DSIMPLE_ENABLE_CPACK=ON
  else
    cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DSIMPLE_BUILD_TESTS=ON -DSIMPLE_BUILD_EXAMPLES=ON
  fi

script:
- make -j8
- |
  if [[ "${SIMPLE_PACKAGE}" != "True" ]]; then  
    ctest -R simple_tests -C Release --output-on-failure   
  fi

before_deploy:
- cpack
- |
  if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    export RELEASE_PKG_FILE=$(ls *.deb)
  else
    export RELEASE_PKG_FILE=$(ls *.tar.gz) 
  fi
- echo "deploying $RELEASE_PKG_FILE to GitHub releases"

deploy:
  - provider: releases
    api_key:
      secure: T3Nlntlzn5rysaI0Cq4QVIb3P9C3s8lr/x4YbB0a3x+aliN/9h9590jHy/ZLt/rDXz5sIqX0bRn/OcWYfyj4tUUmi5ztXrMOes/f2jt2qF1aTDd3i37pS/ZHNB0ukCJUxcuY7w0H+ck7IVaqND9lIVMR2rj4d2M1roBs6tFOpcF8tlE0vZIcCpg5YDGWzlxErfg316YSNHVXZUmGEcXiVDsjXG7knok54pYzi5/mNej1C3e5xPKPMvaVgF90a8mJ2zG4GP5nDjzM6YK3YpTvYS49lqkPa5lu6r3YWvLvsbdCqKWrbpVaruTuR7BFNFMY3cJIfNy/DkIPmAPDJGzDUEK9cG5jJXUrY7ceq7GYPRwmWeVduRlxTgeTrrQCvyt2+khdPyrviOs1x52yn+iYo8WVFEe76Gmu9cxrWOx/7Vu/xVK33ltIQDIoorbEQOAYkXtnxj/ipl6iRk/CR1hSTC+5FFM49oaOvheW3LY+k9inQv6qwsxHVxWWIoLkyAOlUJtlhHFjdepC+QqZsFU29CH4Wv/tQDIljiI+CDdYNPU/D3hRHPeH978UvTU8JGvzNMWaKIQ5rzNNsBV8B6GHYjfegdJxKbUAW4WFcKY1rdVhy0mEI4nwt/gw+kh8OHg70MhKLiSEgBxD9zUVoyGYRuJR23bB/Dmq36rO1fUN1uA=
    file_glob: true
    file: "${RELEASE_PKG_FILE}"
    on:
      tags: true